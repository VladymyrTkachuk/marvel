{"version":3,"file":"static/js/156.d98a7ddc.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","hooks/http.hook.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const { getComic, getCharacter, clearError, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n    // eslint-disable-next-line\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComic(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmet\"));\r\n        break;\r\n      case \"character\":\r\n        getCharacter(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmet\"));\r\n    }\r\n  };\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {setContent(process, Component, data)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\"); //FSM ожидание\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Coult not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n      // eslint-disable-next-line\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=dfcb4b32f15723cc105bc90c43b5f174\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmet\": \r\n      return <Component data={data} />; \r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","data","setData","useState","getComic","getCharacter","clearError","process","setProcess","useMarvelService","useEffect","updateData","then","onDataLoaded","_Fragment","setContent","request","useHttp","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","json","e","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","getCharacterByName","res","getAllComics","Skeleton","Spinner"],"sourceRoot":""}