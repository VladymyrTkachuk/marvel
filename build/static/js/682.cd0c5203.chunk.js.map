{"version":3,"file":"static/js/682.cd0c5203.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n      break;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n      break;\n    case \"confirmet\":\n      return <Component />;\n      break;\n    case \"error\":\n      return <ErrorMessage />;\n      break;\n    default:\n      new Error(\"Unexpected process state\");\n  }\n};\n\nconst ComicsList = (props) => {\n  const [comList, setComList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [comEndet, setComEndet] = useState(false);\n\n  const { loading, error, getAllComics, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n    getAllComics(offset)\n      .then(onComListLoaded)\n      .then(() => setProcess(\"confirmet\"));\n  };\n\n  const onComListLoaded = (newComList) => {\n    let ended = false;\n    if (newComList.length < 8) {\n      ended = true;\n    }\n\n    setComList((comList) => [...comList, ...newComList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComEndet(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <NavLink to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </NavLink>\n        </li>\n      );\n    });\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comList), newItemLoading)}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: comEndet ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\nexport default ComicsPage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\"); //FSM ожидание\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Coult not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n      // eslint-disable-next-line\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=dfcb4b32f15723cc105bc90c43b5f174\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","props","comList","setComList","useState","setNewItemLoading","offset","setOffset","comEndet","setComEndet","loading","error","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComListLoaded","newComList","ended","length","arr","items","map","item","i","NavLink","to","id","thumbnail","title","price","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","ComicsList","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","data","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}